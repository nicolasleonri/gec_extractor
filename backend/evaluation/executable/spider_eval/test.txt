SELECT "Title" FROM "Cartoon" ORDER BY "Title";
 SELECT "Title" FROM "Cartoon" ORDER BY "Title";
 SELECT * FROM Cartoon WHERE Directed_by = 'Ben Jones';
 SELECT "Title" FROM "Cartoon" WHERE "Directed_by" = 'Ben Jones';
 SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr';
 SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr';
 SELECT c."Title", c."Directed_by", o."Original_air_date"  FROM "Cartoon" c  WHERE c."Channel" IN (SELECT id FROM "TV_Channel" WHERE "series_name" LIKE 'Sky%')  ORDER BY o."Original_air_date";
 SELECT c."Title", c."Directed_by" FROM "Cartoon" c ORDER BY (SELECT "Original_air_date" FROM "Cartoon" WHERE c.id = id);
 SELECT "Title" FROM "Cartoon" WHERE "Directed_by" IN ('Ben Jones', 'Brandon Vietti');
 SELECT Title  FROM Cartoon  WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti';
 SELECT "Country", COUNT(*) AS "Number_of_TV_Channels"  FROM "TV_Channel"  GROUP BY "Country"  ORDER BY COUNT(*) DESC  LIMIT ;
 SELECT Country, COUNT(*) AS Total_Channels  FROM TV_Channel  GROUP BY Country  ORDER BY Total_Channels DESC  LIMIT ;
 SELECT COUNT(DISTINCT series_name), COUNT(DISTINCT Content) FROM TV_Channel;
 SELECT DISTINCT series_name, Content FROM TV_Channel;
 SELECT * FROM TV_Channel WHERE series_name = 'Sky Radio';
 SELECT Content  FROM TV_Channel  WHERE id = '';
 SELECT Package_Option FROM TV_Channel WHERE series_name = 'Sky Radio';
 SELECT Package_Option  FROM TV_Channel  WHERE series_name = 'Sky Radio';
 SELECT * FROM TV_Channel WHERE Language = 'English';
 SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English';
 SELECT Language, COUNT(*) AS Count  FROM TV_Channel  GROUP BY Language  ORDER BY Count LIMIT ;
 SELECT Language, COUNT(*) AS Count FROM TV_Channel GROUP BY Language ORDER BY Count LIMIT ;
 SELECT      Language,      COUNT(*)  FROM      TV_Channel  GROUP BY      Language;
 SELECT COUNT(DISTINCT TV_Channel.id) AS "Number of TV Channels"  FROM TV_Channel  JOIN Cartoon ON TV_Channel.id = Cartoon.Channel  GROUP BY TV_Channel.Language;
 SELECT t."series_name"  FROM "TV_Channel" t  WHERE t.id = (SELECT c."Channel"                FROM "Cartoon" c                WHERE c."Title" = 'The Rise of the Blue Beetle!');
 SELECT t.series_name  FROM TV_Channel t  JOIN Cartoon c ON t.id = c.Channel  WHERE c."Title" = 'The Rise of the Blue Beetle!';
 SELECT c."Title"  FROM "Cartoon" c  JOIN "TV_Channel" t ON c."Channel" = t.id  WHERE t.series_name = 'Sky Radio';
 SELECT c."Title"  FROM "Cartoon" c  JOIN "TV_Channel" t ON c."Channel" = t.id  WHERE t.series_name = 'Sky Radio';
 SELECT Episode FROM TV_series ORDER BY Rating;
 SELECT * FROM TV_series ORDER BY Rating DESC;
 SELECT TOP  "TV_series"."Episode", "TV_series"."Rating" FROM "TV_series" ORDER BY "TV_series"."Rating" DESC;
 SELECT TOP  * FROM TV_series ORDER BY Rating DESC;
 SELECT MIN(Share), MAX(Share) FROM TV_series;
 SELECT MAX(Share), MIN(Share) FROM TV_series;
 SELECT Air_Date FROM TV_series WHERE Episode = 'A Love of a Lifetime';
 SELECT Air_Date FROM TV_series WHERE Episode = 'A Love of a Lifetime';
 SELECT Weekly_Rank FROM TV_series WHERE Episode = 'A Love of a Lifetime';
 SELECT Weekly_Rank FROM TV_series WHERE Episode = 'A Love of a Lifetime';
 SELECT t."series_name"  FROM "TV_series" s  JOIN "TV_Channel" t ON s."Channel" = t.id  WHERE s."Episode" = 'A Love of a Lifetime';
 SELECT "TV_series"."Episode", "TV_Channel".series_name  FROM "TV_series"  JOIN "TV_Channel" ON "TV_series".Channel = "TV_Channel".id  WHERE "TV_series"."Episode" = 'A Love of a Lifetime';
 SELECT t."Episode" FROM "TV_series" t JOIN "TV_Channel" c ON t."Channel" = c.id WHERE c."series_name" = 'Sky Radio';
 SELECT e."Episode"  FROM "TV_series" t  JOIN "TV_Channel" c ON t."Channel" = c.id  WHERE c."series_name" = 'Sky Radio';
 SELECT COUNT(*) FROM Cartoon WHERE Directed_by IN ('Ben Jones', 'Brandon Vietti', 'Michael Chang');
 SELECT    d."Directed_by",    COUNT(c.id) AS num_cartoons  FROM    "Cartoon" c    JOIN "Cartoon" d ON c."Directed_by" = d."Directed_by"  GROUP BY    d."Directed_by";
 SELECT "Production_code", "Channel" FROM "Cartoon" WHERE "Original_air_date" = (SELECT MAX("Original_air_date") FROM "Cartoon");
 SELECT Production_code, Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT ;
 SELECT Package_Option, series_name FROM TV_Channel WHERE Hight_definition_TV = 'yes';
 SELECT Package_Option, series_name  FROM TV_Channel  WHERE Hight_definition_TV = 'yes';
 SELECT DISTINCT "TV_Channel"."Country"  FROM "Cartoon"  JOIN "TV_Channel" ON "Cartoon"."Channel" = "TV_Channel".id  WHERE "Cartoon"."Written_by" = 'Todd Casey';
 SELECT DISTINCT "TV_Channel"."Country"  FROM "Cartoon"  JOIN "TV_Channel" ON "Cartoon"."Channel" = "TV_Channel".id  JOIN "TV_series" ON "TV_Channel".id = "TV_series".Channel  WHERE "Cartoon"."Written_by" = 'Todd Casey';
 SELECT DISTINCT "Country" FROM "TV_Channel" WHERE id NOT IN (SELECT "Channel" FROM "Cartoon" WHERE "Written_by" = 'Todd Casey') AND id IN (SELECT "Channel" FROM "TV_series");
 SELECT DISTINCT "Country"  FROM "TV_Channel"  WHERE "id" NOT IN (SELECT "Channel" FROM "Cartoon" WHERE "Written_by" = 'Todd Casey');
 SELECT t.series_name, t.Country  FROM TV_Channel t  JOIN TV_series s ON t.id = s.Channel  WHERE s.Channel IN (   SELECT c.Channel    FROM Cartoon c    WHERE c.Directed_by IN ('Ben Jones', 'Michael Chang')  );
 SELECT t.series_name, t.Country  FROM TV_Channel t  JOIN TV_series s ON t.id = s.Channel  WHERE s.id IN (   SELECT c.id    FROM Cartoon c    WHERE c.Directed_by = 'Ben Jones' OR c.Directed_by = 'Michael Chang');
 SELECT TV_Channel.Pixel_aspect_ratio_PAR, TV_Channel.Country  FROM TV_Channel  WHERE TV_Channel.Language != 'English';
 SELECT TV_Channel.Pixel_aspect_ratio_PAR, TV_Channel.Country  FROM TV_Channel  WHERE TV_Channel.Language != 'English';
 SELECT id FROM TV_Channel WHERE Country IN (SELECT Country FROM TV_Channel GROUP BY Country HAVING COUNT(id) > );
 SELECT id FROM TV_Channel WHERE id IN (SELECT Channel FROM TV_series GROUP BY Channel HAVING COUNT(Channel) > );
 SELECT id FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones');
 SELECT id FROM TV_Channel WHERE id NOT IN (SELECT "Channel" FROM Cartoon WHERE "Directed_by" = 'Ben Jones');
 SELECT Package_Option  FROM TV_Channel  WHERE id NOT IN (SELECT Channel                   FROM Cartoon                   WHERE Directed_by = 'Ben Jones');
 SELECT Package_Option  FROM TV_Channel  WHERE id NOT IN (SELECT Channel                   FROM Cartoon                   WHERE Directed_by = 'Ben Jones');
 SELECT COUNT(*) FROM Pets WHERE weight > ;
 SELECT COUNT(*) FROM Pets WHERE weight > ;
 SELECT weight FROM Pets WHERE PetType = 'dog' AND pet_age = (SELECT MIN(pet_age) FROM Pets WHERE PetType = 'dog');
 SELECT weight FROM Pets WHERE PetType = 'dog' ORDER BY pet_age LIMIT ;
 SELECT DISTINCT p.petType, MAX(p.weight) AS maxWeight FROM Pets p GROUP BY p.petType;
 SELECT p.PetType, MAX(p.weight) AS MaxWeight  FROM Pets p  GROUP BY p.PetType;
 SELECT COUNT(*) FROM Has_Pet HP  JOIN Student S ON HP.StuID = S.StuID  WHERE S.Age > ;
 SELECT COUNT(*)  FROM Has_Pet  JOIN Student ON Has_Pet.StuID = Student.StuID  WHERE Student.Age > ;
 SELECT COUNT(*)  FROM Has_Pet HP  JOIN Pets P ON HP.PetID = P.PetID  JOIN Student S ON HP.StuID = S.StuID  WHERE P.PetType = 'dog' AND S.Sex = 'F';
 SELECT COUNT(*)  FROM Has_Pet  JOIN Student ON Has_Pet."StuID" = Student."StuID"  JOIN Pets ON Has_Pet."PetID" = Pets."PetID"  WHERE Student."Sex" = 'F' AND Pets."PetType" = 'dog';
 SELECT DISTINCT PetType FROM Pets;
 SELECT DISTINCT PetType FROM Pets;
 SELECT s.Fname  FROM Student s  JOIN Has_Pet hp ON s.StuID = hp.StuID  JOIN Pets p ON hp.PetID = p.PetID  WHERE p.PetType IN ('cat', 'dog');
 SELECT S.Fname  FROM Student S  JOIN Has_Pet HP ON S.StuID = HP.StuID  JOIN Pets P ON HP.PetID = P.PetID  WHERE P.PetType IN ('cat', 'dog');
 SELECT S.Fname  FROM Student S  JOIN Has_Pet HP ON S.StuID = HP.StuID  JOIN Pets P ON HP.PetID = P.PetID  WHERE P.PetType IN ('cat', 'dog')  GROUP BY S.Fname  HAVING COUNT(DISTINCT P.PetType) = ;
 SELECT S.Fname  FROM Student S  JOIN Has_Pet HP ON S.StuID = HP.StuID  JOIN Pets P ON HP.PetID = P.PetID  WHERE P.PetType IN ('cat', 'dog')  GROUP BY S.Fname  HAVING COUNT(DISTINCT P.PetType) = ;
 SELECT s.Age, s.Major  FROM Student s  WHERE s.StuID NOT IN (SELECT hp.StuID                       FROM Has_Pet hp                       JOIN Pets p ON hp.PetID = p.PetID                       WHERE p.PetType = 'cat');
 SELECT s."Major", s."Age"  FROM "Student" s  WHERE s."StuID" NOT IN (SELECT hp."StuID" FROM "Has_Pet" hp JOIN "Pets" p ON hp."PetID" = p."PetID" WHERE p."PetType" = 'cat')
 SELECT s.StuID  FROM Student s  WHERE s.StuID NOT IN (SELECT hp.StuID                        FROM Has_Pet hp                        JOIN Pets p ON hp.PetID = p.PetID                        WHERE p.PetType = 'cat');
 SELECT DISTINCT s.StuID  FROM Student s  WHERE s.StuID NOT IN (SELECT hp.StuID                        FROM Has_Pet hp                        JOIN Pets p ON hp.PetID = p.PetID                        WHERE p.PetType = 'cat');
 SELECT s.Fname, s.Age  FROM Student s  JOIN Has_Pet hp ON s.StuID = hp.StuID  JOIN Pets p ON hp.PetID = p.PetID  WHERE p.PetType = 'dog' AND p.PetID NOT IN (SELECT PetID FROM Pets WHERE PetType = 'cat');
 SELECT S.Fname  FROM Student S  WHERE S.StuID IN (SELECT HP.StuID                    FROM Has_Pet HP                    JOIN Pets P ON HP.PetID = P.PetID                    WHERE P.PetType = 'dog'                    AND HP.StuID NOT IN (SELECT HP.StuID                                         FROM Has_Pet HP                                         WHERE HP.PetID IN (SELECT P.PetID                                                            FROM Pets P                                                            WHERE P.PetType = 'cat')))
 SELECT p.PetType, p.weight  FROM Pets p  WHERE p.pet_age = (SELECT MIN(pet_age) FROM Pets);
 SELECT PetType, weight  FROM Pets  WHERE pet_age = (SELECT MIN(pet_age) FROM Pets);
 SELECT p.PetID, p.weight FROM Pets p WHERE p.pet_age > ;
 SELECT p.PetID, p.weight  FROM Pets p  WHERE p.pet_age > ;
 SELECT      p.PetType,      AVG(p.pet_age) AS AverageAge,      MAX(p.pet_age) AS MaxAge FROM      Pets p GROUP BY      p.PetType;
 SELECT      p.pet_type,      AVG(p.pet_age) AS avg_age,      MAX(p.pet_age) AS max_age FROM      Pets p GROUP BY      p.pet_type;
 SELECT p.PetType, AVG(p.weight) FROM Pets p GROUP BY p.PetType;
 SELECT p.PetType, AVG(p.weight) AS AverageWeight FROM "Pets" p GROUP BY p.PetType;
 SELECT s.Fname, s.Age  FROM Student s  JOIN Has_Pet hp ON s.StuID = hp.StuID  WHERE hp.PetID IS NOT NULL;
 SELECT DISTINCT S.Fname, S.Age  FROM Student S  JOIN Has_Pet HP ON S.StuID = HP.StuID  WHERE HP.StuID IS NOT NULL;
 SELECT PetID  FROM Has_Pet  JOIN Student ON Has_Pet.StuID = Student.StuID  WHERE Student.LName = 'Smith';
 SELECT PetID  FROM Has_Pet  JOIN Student ON Has_Pet.StuID = Student.StuID  WHERE Student.LName = 'Smith';
 SELECT s.StuID, COUNT(h.PetID) AS NumPets  FROM "Student" s  JOIN "Has_Pet" h ON s.StuID = h.StuID  GROUP BY s.StuID;
 SELECT HP.StuID, COUNT(HP.PetID) AS PetCount  FROM "Has_Pet" HP  GROUP BY HP.StuID;
 SELECT s.Fname, s.Sex  FROM Student s  WHERE s.StuID IN (SELECT h.StuID                   FROM Has_Pet h                   GROUP BY h.StuID                   HAVING COUNT(h.PetID) > );
 SELECT S.Fname, S.Sex  FROM Student S  WHERE S.StuID IN (SELECT HP.StuID                    FROM Has_Pet HP                    GROUP BY HP.StuID                    HAVING COUNT(HP.PetID) > );
 SELECT s.LName  FROM Student s  JOIN Has_Pet hp ON s.StuID = hp.StuID  JOIN Pets p ON hp.PetID = p.PetID  WHERE p.pet_age =  AND p.PetType = 'cat';
 SELECT s.LName  FROM Student s  JOIN Has_Pet hp ON s.StuID = hp.StuID  JOIN Pets p ON hp.PetID = p.PetID  WHERE p.pet_age =  AND p.PetType = 'cat';
 SELECT AVG("Age")  FROM "Student"  WHERE "StuID" NOT IN (SELECT "StuID" FROM "Has_Pet");
 SELECT AVG("Age")  FROM "Student"  WHERE "StuID" NOT IN (SELECT "StuID" FROM "Has_Pet");
 SELECT COUNT(*) FROM teacher;
 SELECT COUNT(*) FROM teacher;
 SELECT t.Name FROM teacher t ORDER BY CAST(t.Age AS INTEGER) ASC;
 SELECT t.Name FROM teacher t ORDER BY t.Age ASC;
 SELECT t."Age", t."Hometown" FROM teacher t;
 SELECT t."Teacher_ID", t."Name", t."Age", t."Hometown" FROM teacher t;
 SELECT t.Name FROM teacher t WHERE t.Hometown != 'Little Lever Urban District';
 SELECT t.Name  FROM teacher t  WHERE t.Hometown NOT LIKE 'Little Lever Urban District';
 SELECT t.Name FROM teacher t WHERE t.Age = '' OR t.Age = '';
 SELECT t.Name  FROM teacher t  WHERE t.Age = '' OR t.Age = '';
 SELECT t.Hometown  FROM teacher t  WHERE t.Age = (SELECT MIN(t.Age) FROM teacher t);
 SELECT hometown FROM teacher WHERE Age = (SELECT MIN(Age) FROM teacher);
 SELECT DISTINCT hometown, COUNT(*) AS num_teachers FROM teacher GROUP BY hometown;
 SELECT t.Hometown, COUNT(*) AS Num_Teachers  FROM teacher t;
 SELECT hometown FROM teacher GROUP BY hometown ORDER BY COUNT(*) DESC LIMIT ;
 SELECT hometown AS Most_Common_Hometown FROM teacher GROUP BY hometown ORDER BY COUNT(*) DESC LIMIT ;
 SELECT DISTINCT hometown FROM teacher WHERE hometown IN (SELECT hometown FROM teacher GROUP BY hometown HAVING COUNT(hometown) > );
 SELECT DISTINCT hometown FROM teacher WHERE hometown IN (SELECT hometown FROM teacher GROUP BY hometown HAVING COUNT(teacher_id) >= );
 SELECT t.Name, c.Course  FROM teacher t  JOIN course_arrange ca ON t.Teacher_ID = ca.Teacher_ID  JOIN course c ON ca.Course_ID = c.Course_ID;
 SELECT t.Name, c.Course  FROM teacher t  JOIN course_arrange ca ON t.Teacher_ID = ca.Teacher_ID  JOIN course c ON ca.Course_ID = c.Course_ID;
 SELECT t.Name, ca.Course  FROM teacher t  JOIN course_arrange ca ON t.Teacher_ID = ca.Teacher_ID  ORDER BY t.Name ASC;
 SELECT t.Name, c.Course  FROM teacher t  JOIN course_arrange ca ON t.Teacher_ID = ca.Teacher_ID  JOIN course c ON ca.Course_ID = c.Course_ID  ORDER BY t.Name ASC;
 SELECT t.Name  FROM teacher t  JOIN course_arrange ca ON t.Teacher_ID = ca.Teacher_ID  JOIN course c ON ca.Course_ID = c.Course_ID  WHERE c.Course = 'Math';
 SELECT t.Name  FROM teacher t  JOIN course_arrange ca ON t.Teacher_ID = ca.Teacher_ID  JOIN course c ON ca.Course_ID = c.Course_ID  WHERE c.Course = 'Math';
 SELECT t.Name, COUNT(ca.Course_ID) AS Num_Courses  FROM teacher t  JOIN course_arrange ca ON t.Teacher_ID = ca.Teacher_ID  GROUP BY t.Name;
 SELECT t.Name, COUNT(ca.Course_ID) AS NumCourses  FROM teacher t  JOIN course_arrange ca ON t.Teacher_ID = ca.Teacher_ID  GROUP BY t.Name;
 SELECT t.Name  FROM teacher t  JOIN course_arrange ca ON t.Teacher_ID = ca.Teacher_ID  GROUP BY t.Name  HAVING COUNT(ca.Course_ID) >= ;
 SELECT t.Name  FROM teacher t  JOIN course_arrange ca ON t.Teacher_ID = ca.Teacher_ID  GROUP BY t.Name  HAVING COUNT(ca.Course_ID) >= ;
 SELECT t.Name  FROM teacher t  WHERE NOT EXISTS (SELECT  FROM course_arrange ca WHERE ca.Teacher_ID = t.Teacher_ID);
 SELECT t.Name  FROM teacher t  WHERE t.Teacher_ID NOT IN (SELECT ca.Teacher_ID                             FROM course_arrange ca);
 SELECT COUNT(*) FROM Documents;
 SELECT COUNT(*) FROM Documents;
 SELECT d.Document_ID, d.Document_Name, d.Document_Description FROM Documents d;
 SELECT d.Document_ID, d.Document_Name, d.Document_Description FROM Documents d;
 SELECT d.Document_Name, d.Template_ID  FROM Documents d  WHERE d.Document_Description LIKE '%w%';
 SELECT d.Document_Name, d.Template_ID  FROM Documents d  WHERE d.Document_Description LIKE '%w%';
 SELECT d.Document_ID, t.Template_ID, t.Template_Type_Description  FROM Documents d  JOIN Templates t ON d.Template_ID = t.Template_ID  JOIN Ref_Template_Types r ON t.Template_Type_Code = r.Template_Type_Code  WHERE d.Document_Name = 'Robbin CV';
 SELECT d.Document_ID, d.Template_ID, t.Template_Type_Description  FROM Documents d  JOIN Templates t ON d.Template_ID = t.Template_ID  JOIN Ref_Template_Types r ON t.Template_Type_Code = r.Template_Type_Code  WHERE d.Document_Name = 'Robbin CV';
 SELECT COUNT(DISTINCT t.Template_ID)  FROM Documents d  JOIN Templates t ON d.Template_ID = t.Template_ID;
 SELECT COUNT(DISTINCT "Templates"."Template_ID") FROM "Documents" INNER JOIN "Templates" ON "Documents"."Template_ID" = "Templates"."Template_ID";
 SELECT COUNT(*) FROM Documents WHERE Template_ID IN (SELECT Template_ID FROM Templates WHERE Template_Type_Code = 'PPT');
 SELECT COUNT(*) FROM Documents WHERE Template_ID IN (SELECT Template_ID FROM Templates WHERE Template_Type_Code = 'PPT');
 SELECT t.Template_ID, COUNT(d.Document_ID) AS Num_Documents  FROM Templates t  JOIN Documents d ON t.Template_ID = d.Template_ID  GROUP BY t.Template_ID;
 SELECT DISTINCT t.Template_ID, COUNT(d.Template_ID) AS Count  FROM Documents d  JOIN Templates t ON d.Template_ID = t.Template_ID;
 SELECT t.Template_ID, rt.Template_Type_Code  FROM Templates t  JOIN Ref_Template_Types rt ON t.Template_Type_Code = rt.Template_Type_Code  WHERE t.Template_ID IN (SELECT Template_ID FROM Documents GROUP BY Template_ID ORDER BY COUNT(*) DESC LIMIT );
 SELECT t.Template_ID, rt.Template_Type_Code  FROM Templates t  JOIN Ref_Template_Types rt ON t.Template_Type_Code = rt.Template_Type_Code  WHERE t.Template_ID IN (SELECT Template_ID FROM Documents GROUP BY Template_ID ORDER BY COUNT(*) DESC LIMIT );
 SELECT t.Template_ID FROM Templates t JOIN Documents d ON t.Template_ID = d.Template_ID GROUP BY t.Template_ID HAVING COUNT(d.Document_ID) > ;
 SELECT DISTINCT t.Template_ID  FROM Templates t  JOIN Documents d ON t.Template_ID = d.Template_ID  GROUP BY t.Template_ID  HAVING COUNT(d.Document_ID) > ;
 SELECT t.Template_ID FROM Templates t LEFT JOIN Documents d ON t.Template_ID = d.Template_ID WHERE d.Template_ID IS NULL;
 SELECT t.Template_ID FROM Templates t  WHERE NOT EXISTS (SELECT  FROM Documents d WHERE d.Template_ID = t.Template_ID);
 SELECT COUNT(*) FROM Templates;
 SELECT COUNT(*) FROM Templates;
 SELECT t.Template_ID, t.Version_Number, rt.Template_Type_Code FROM Templates t JOIN Ref_Template_Types rt ON t.Template_Type_Code = rt.Template_Type_Code;
 SELECT t.Template_ID, t.Version_Number, rt.Template_Type_Code FROM Templates t JOIN Ref_Template_Types rt ON t.Template_Type_Code = rt.Template_Type_Code;
 SELECT DISTINCT Template_Type_Code FROM Templates;
 SELECT DISTINCT Template_Type_Code FROM "Templates" WHERE Template_Type_Code IS NOT NULL;
 SELECT t.Template_ID FROM Templates t WHERE t.Template_Type_Code IN ('PP', 'PPT');
 SELECT t.Template_ID FROM Templates t WHERE t.Template_Type_Code IN ('PP', 'PPT');
 SELECT COUNT(*) FROM Templates WHERE Template_Type_Code = 'CV';
 SELECT COUNT(*) FROM Templates WHERE Template_Type_Code = 'CV';
 SELECT t.Template_Type_Code, t.Version_Number  FROM Templates t  WHERE t.Version_Number > ;
 SELECT t.Template_Type_Code, t.Version_Number FROM Templates t WHERE t.Version_Number > ;
 SELECT rt.Template_Type_Code, COUNT(t.Template_ID) AS Num_Templates  FROM Templates t  JOIN Ref_Template_Types rt ON t.Template_Type_Code = rt.Template_Type_Code  GROUP BY rt.Template_Type_Code;
 SELECT      Template_Type_Code,      COUNT(*)  FROM      Templates  GROUP BY      Template_Type_Code;
 SELECT Template_Type_Code FROM Ref_Template_Types, Templates WHERE Template_Type_Code = Template_Type_Code GROUP BY Template_Type_Code ORDER BY COUNT(*) DESC LIMIT ;
 SELECT MAX(t.Template_Type_Code)  FROM Templates t  JOIN Ref_Template_Types rt ON t.Template_Type_Code = rt.Template_Type_Code  GROUP BY t.Template_Type_Code  ORDER BY COUNT(*) DESC  LIMIT ;
 SELECT DISTINCT Template_Type_Code FROM Templates WHERE Template_ID IN (SELECT Template_ID FROM Templates GROUP BY Template_Type_Code HAVING COUNT(Template_ID) < )
 SELECT      Template_Type_Code  FROM      Ref_Template_Types  WHERE      Template_Type_Code NOT IN (         SELECT              Template_Type_Code          FROM              Templates          GROUP BY              Template_Type_Code          HAVING              COUNT(Template_ID) >=      );
 SELECT MIN(Version_Number), Template_Type_Code  FROM Templates  WHERE Template_Type_Code IN (SELECT Template_Type_Code FROM Ref_Template_Types);
 SELECT MIN(t.Version_Number), rt.Template_Type_Code  FROM Templates t  JOIN Ref_Template_Types rt ON t.Template_Type_Code = rt.Template_Type_Code;
 SELECT t.Template_Type_Code  FROM Documents d  JOIN Templates t ON d.Template_ID = t.Template_ID  WHERE d.Document_Name = 'Understanding DB';
 SELECT t.Template_Type_Code  FROM Documents d  JOIN Templates t ON d.Template_ID = t.Template_ID  WHERE d.Document_Name = 'Data base';
 SELECT d.Document_Name FROM Documents d JOIN Templates t ON d.Template_ID = t.Template_ID JOIN Ref_Template_Types r ON t.Template_Type_Code = r.Template_Type_Code WHERE r.Template_Type_Description = 'BK';
 SELECT d.Document_Name  FROM Documents d  JOIN Templates t ON d.Template_ID = t.Template_ID  WHERE t.Template_Type_Code = 'BK';
 SELECT rt.Template_Type_Code, COUNT(d.Document_ID)  FROM Templates t JOIN Ref_Template_Types rt ON t.Template_Type_Code = rt.Template_Type_Code  JOIN Documents d ON t.Template_ID = d.Template_ID  GROUP BY rt.Template_Type_Code;
 SELECT DISTINCT rt.Template_Type_Code, COUNT(d.Template_ID)  FROM Templates t  JOIN Ref_Template_Types rt ON t.Template_Type_Code = rt.Template_Type_Code  JOIN Documents d ON t.Template_ID = d.Template_ID  GROUP BY rt.Template_Type_Code;
 SELECT      Template_Type_Code,      COUNT(*)  FROM      Templates  INNER JOIN      Documents ON Templates.Template_ID = Documents.Template_ID  GROUP BY      Template_Type_Code  ORDER BY      COUNT(*) DESC  LIMIT ;
 SELECT      Template_Type_Code  FROM      Ref_Template_Types  WHERE      Template_Type_Code = (         SELECT              Template_Type_Code          FROM              Templates          GROUP BY              Template_Type_Code          ORDER BY              COUNT(DISTINCT Document_ID) DESC          LIMIT      );
 SELECT rt.Template_Type_Code  FROM Ref_Template_Types rt  WHERE NOT EXISTS (SELECT  FROM Templates t JOIN Documents d ON t.Template_ID = d.Template_ID WHERE t.Template_Type_Code = rt.Template_Type_Code);
 SELECT DISTINCT Template_Type_Code  FROM Ref_Template_Types  WHERE Template_Type_Code NOT IN (SELECT Template_Type_Code                                    FROM Templates                                    WHERE Template_ID IN (SELECT Template_ID                                                          FROM Documents));
 SELECT * FROM Ref_Template_Types;
 SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types;
 SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD';
 SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD';
 SELECT Template_Type_Code  FROM Ref_Template_Types  WHERE Template_Type_Description = 'Book';
 SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book';
 SELECT DISTINCT rt.Template_Type_Description  FROM Templates t  JOIN Ref_Template_Types rt ON t.Template_Type_Code = rt.Template_Type_Code  WHERE t.Template_ID IN (SELECT d.Template_ID FROM Documents d);
 SELECT DISTINCT t.Template_Type_Description  FROM Templates t  JOIN Documents d ON t.Template_ID = d.Template_ID;
 SELECT t.Template_ID  FROM Templates t  JOIN Ref_Template_Types r ON t.Template_Type_Code = r.Template_Type_Code  WHERE r.Template_Type_Description = 'Presentation';
 SELECT t.Template_ID FROM Templates t WHERE t.Template_Type_Code = (SELECT rt.Template_Type_Code FROM Ref_Template_Types rt WHERE rt.Template_Type_Description = 'Presentation');
 SELECT COUNT(*) FROM Paragraphs;
 SELECT COUNT(*) FROM Paragraphs;
 SELECT COUNT(*) FROM Paragraphs WHERE Document_ID IN (SELECT Document_ID FROM Documents WHERE Document_Name = 'Summer Show');
 SELECT COUNT(*) FROM Paragraphs WHERE Document_ID IN (SELECT Document_ID FROM Documents WHERE Document_Name = 'Summer Show');
 SELECT * FROM Paragraphs WHERE Paragraph_Text = 'Korea ';
 SELECT * FROM Paragraphs WHERE Paragraph_Text LIKE '%Korea%';

